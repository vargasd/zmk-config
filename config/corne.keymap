/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/ext_power.h>

#define QUICK_TAP_MS 200
#define MEH LC(LS(LALT))

&mt {
  quick-tap-ms = <QUICK_TAP_MS>;
};

&lt {
  quick-tap-ms = <QUICK_TAP_MS>;
  flavor = "hold-preferred";
};

/ {
combos {
  compatible = "zmk,combos";
  right_index_middle {
    key-positions = <19 20>;
    bindings = <&kp LPAR>;
  };
  right_middle_ring {
    key-positions = <20 21>;
    bindings = <&kp RPAR>;
  };
  right_index_up {
    key-positions = <7 19>;
    bindings = <&kp LBKT>;
  };
  right_middle_up {
    key-positions = <8 20>;
    bindings = <&kp RBKT>;
  };
  right_index_down {
    key-positions = <19 31>;
    bindings = <&kp LBRC>;
  };
  right_middle_down {
    key-positions = <20 32>;
    bindings = <&kp RBRC>;
  };
  down_arrow {
    key-positions = <19 40>;
    bindings = <&mo_kp 2 DOWN>;
    timeout-ms = <125>;
    slow-release;
  };
  up_arrow {
    key-positions = <20 40>;
    bindings = <&mo_kp 2 UP>;
    timeout-ms = <125>;
    slow-release;
  };
};

macros {
  mo_kp: mo_kp {
    label = "momentary_layer_with_key_tap";
    compatible = "zmk,behavior-macro-two-param";
    wait-ms = <0>;
    tap-ms = <0>;
    #binding-cells = <2>;
    bindings =
      <&macro_param_1to1>,
      <&macro_press &mo MACRO_PLACEHOLDER>,
      <&macro_param_2to1>,
      <&macro_tap &kp MACRO_PLACEHOLDER>,
      <&macro_pause_for_release>,
      <&macro_param_1to1>,
      <&macro_release &mo MACRO_PLACEHOLDER>;
  };
};

behaviors {
  lhm: left_home_row_mod {
    compatible = "zmk,behavior-hold-tap";
    #binding-cells = <2>;
    flavor = "balanced";
    tapping-term-ms = <280>;
    quick-tap-ms = <QUICK_TAP_MS>;
    bindings = <&kp>, <&kp>;
    hold-trigger-on-release;
    require-prior-idle-ms = <150>;
    hold-trigger-key-positions = <
      6  7  8  9  10
      18 19 20 21 22
      30 31 32 33 34
      36 37 38
               39 40 41
    >;
  };
  rhm: right_home_row_mod {
    compatible = "zmk,behavior-hold-tap";
    #binding-cells = <2>;
    flavor = "balanced";
    tapping-term-ms = <280>;
    quick-tap-ms = <QUICK_TAP_MS>;
    bindings = <&kp>, <&kp>;
    hold-trigger-on-release;
    require-prior-idle-ms = <150>;
    hold-trigger-key-positions = <
      1  2  3  4  5
      13 14 15 16 17
      25 26 27 28 29
      36 37 38
               39 40 41
    >;
  };
  tp: mod_tap_preferred {
    compatible = "zmk,behavior-hold-tap";
    #binding-cells = <2>;
    flavor = "tap-preferred";
    tapping-term-ms = <280>;
    quick-tap-ms = <QUICK_TAP_MS>;
    bindings = <&kp>, <&kp>;
  };
};

keymap {
  compatible = "zmk,keymap";

  QWERTY {
    bindings = <
      // ROW 1
      &trans
      &kp Q            &kp W            &kp E            &kp R             &kp T
      &kp Y            &kp U            &kp I            &kp O             &kp P
      &trans
      // ROW 2
      &trans
      &lhm LSHFT A     &lhm LCTRL S     &lhm LALT D      &lhm LGUI F       &kp G
      &kp H            &rhm LGUI J      &rhm LALT K      &rhm LCTRL L      &rhm LSHFT SEMI
      &trans
      // ROW 3
      &trans
      &kp Z            &kp X            &kp C            &kp V             &kp B
      &kp N            &kp M            &kp COMMA        &kp DOT           &kp FSLH
      &trans
      // THUMBS
      &mt LGUI DEL     &lt 1 ESC        &mt LSHFT TAB
                                                         &tp RCTRL SPC     &lt 2 RET       &mt MEH BSPC
    >;
  };

  NUM {
    bindings = <
      // ROW 1
      &trans
      &trans           &trans           &trans           &trans            &trans
      &kp EQUAL        &kp N7           &kp N8           &kp N9            &kp PLUS
      &trans
      // ROW 2
      &trans
      &kp LSHFT        &kp LCTRL        &kp LALT         &kp LGUI          &trans
      &kp DOT          &kp N4           &kp N5           &kp N6            &kp UNDER
      &trans
      // ROW 3
      &trans
      &trans           &trans           &trans           &trans            &trans
      &kp N0           &kp N1           &kp N2           &kp N3            &kp MINUS
      &trans
      // THUMBS
      &trans           &trans           &trans
                                                         &trans            &trans           &trans
    >;
  };

  SYM_NAV {
    bindings = <
      // ROW 1
      &trans
      &kp BANG         &kp AT           &kp HASH         &kp DOLLAR        &kp PERCENT
      &kp CARET        &kp AMPS         &kp STAR         &kp LPAR          &kp RPAR
      &trans
      // ROW 2
      &trans
      &kp GRAVE        &lhm LCTRL MINUS &lhm LALT EQUAL  &lhm LGUI SQT     &kp BSLH
      &kp LEFT         &rhm LGUI DOWN   &rhm LALT UP     &rhm LCTRL RIGHT  &ext_power EP_OFF
      &trans
      // ROW 3
      &trans
      &kp TILDE        &kp UNDER        &kp PLUS         &kp DQT           &kp PIPE
      &kp HOME         &kp PG_DN        &kp PG_UP        &kp END           &trans
      &trans
      // THUMBS
      &trans           &trans           &lt 3 LC(SPC)
                                                         &trans            &trans           &trans
    >;
  };

  FN {
    bindings = <
      // ROW 1
      &trans
      &kp F1           &kp F2           &kp F3           &kp F4            &kp F5
      &kp C_VOL_UP     &trans           &trans           &trans            &bt BT_CLR
      &trans
      // ROW 2
      &trans
      &kp F6           &kp F7           &kp F8           &kp F9            &kp F10
      &kp C_VOL_DN     &kp C_PREV       &kp C_PP         &kp C_NEXT        &bt BT_CLR
      &trans
      // ROW 3
      &trans
      &kp F11          &kp F12          &kp F13          &kp F14           &kp F15
      &bt BT_SEL 0     &bt BT_SEL 1     &bt BT_SEL 2     &bt BT_SEL 3      &bt BT_SEL 4
      &trans
      // THUMBS
      &trans           &trans           &trans
                                                         &trans            &trans           &trans
    >;
  };
};
};
