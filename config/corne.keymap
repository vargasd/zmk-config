/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/ext_power.h>

/ {
combos {
  compatible = "zmk,combos";
  left_index_up {
    key-positions = <4 16>;
    bindings = <&kp LPAR>;
  };
  left_index_stretch_up {
    key-positions = <5 17>;
    bindings = <&kp RPAR>;
  };
  left_index_down {
    key-positions = <16 28>;
    bindings = <&kp LPAR>;
  };
  left_index_stretch_down {
    key-positions = <17 29>;
    bindings = <&kp RPAR>;
  };
  right_index_stretch_up {
    key-positions = <6 18>;
    bindings = <&kp LBKT>;
  };
  right_index_up {
    key-positions = <7 19>;
    bindings = <&kp RBKT>;
  };
  right_index_stretch_down {
    key-positions = <18 30>;
    bindings = <&kp LBRC>;
  };
  right_index_down {
    key-positions = <19 31>;
    bindings = <&kp RBRC>;
  };
  /*
  right_index_middle_top {
    timeout-ms = <25>;
    key-positions = <7 8>;
    bindings = <&kp LBKT>;
  };
  right_middle_ring_top {
    // io is too common
    timeout-ms = <25>;
    key-positions = <8 9>;
    bindings = <&kp RBKT>;
  };
  right_index_middle {
    key-positions = <19 20>;
    bindings = <&kp LPAR>;
  };
  right_middle_ring {
    key-positions = <20 21>;
    bindings = <&kp RPAR>;
  };
  right_index_middle_ring {
    key-positions = <19 20 21>;
    bindings = <&kp TAB>;
  };
  right_middle_up {
    key-positions = <8 20>;
    bindings = <&kp MINUS>;
  };
  right_index_middle_bottom {
    key-positions = <31 32>;
    bindings = <&kp LBRC>;
  };
  right_middle_ring_bottom {
    key-positions = <32 33>;
    bindings = <&kp RBRC>;
  };
  left_index_horizontal {
    key-positions = <16 17>;
    bindings = <&kp LPAR>;
  };
  right_index_horizontal {
    key-positions = <18 19>;
    bindings = <&kp RPAR>;
  };
  right_index_top_horiztontal {
    key-positions = <6 7>;
    bindings = <&kp STAR>;
  };
  right_index_bottom_horizontal {
    key-positions = <30 31>;
    bindings = <&kp DOLLAR>;
  };
  right_middle_down {
    key-positions = <20 32>;
    bindings = <&kp AT>;
  };
  */
  left_index_middle {
    key-positions = <15 16>;
    bindings = <&lt 2 SPC>;
  };
  left_index_middle_ring {
    key-positions = <14 15 16>;
    bindings = <&kp RET>;
  };
  outer_thumbs {
    key-positions = <36 37 40 41>;
    bindings = <&mo 3>;
  };
};

behaviors {
  td_cap_word: tap_dance_mod_tap {
    compatible = "zmk,behavior-tap-dance";
    label = "td_cap_word";
    #binding-cells = <0>;
    bindings = <&kp LSHFT>, <&caps_word>;
  };
  ht_bl: hold_tap_balanced {
    compatible = "zmk,behavior-hold-tap";
    label = "HOLD_TAP_BALANCED";
    #binding-cells = <2>;
    flavor = "balanced";
    tapping-term-ms = <200>;
    quick-tap-ms = <175>;
    bindings = <&kp>, <&kp>;
  };
  cmd_h_tab: cmd_h_tab_mod_morph {
    compatible = "zmk,behavior-mod-morph";
    label = "CMD_H_TAB";
    #binding-cells = <0>;
    bindings = <&kp H>, <&kp TAB>;
    mods = <(MOD_LGUI)>;
    keep-mods = <(MOD_LGUI)>;
  };
};

keymap {
  compatible = "zmk,keymap";

  default_layer {
    bindings = <
      // ROW 1
      &trans
      &kp Q           &kp W            &kp E            &kp R          &kp T
      &kp Y           &kp U            &kp I            &kp O          &kp P
      &trans
      // ROW 2
      &trans
      &kp A           &kp S            &kp D            &kp F          &kp G
      &cmd_h_tab      &kp J            &kp K            &kp L          &kp SEMI
      &trans
      // ROW 3
      &trans
      &kp Z           &kp X            &kp C            &kp V          &kp B
      &kp N           &kp M            &kp COMMA        &kp DOT        &kp FSLH
      &trans
      // THUMBS
      &mt LALT DEL    &mt LGUI ESC     &mt LSHFT TAB
                                                        &mt RCTRL RET  &lt 1 SPC       &ht_bl RSHFT BSPC
    >;
  };

  layer1 {
    bindings = <
      // ROW 1
      &trans
      &kp BANG        &kp AT           &kp HASH        &kp DOLLAR     &kp PERCENT
      &kp CARET       &kp AMPS         &kp STAR        &kp LPAR       &kp RPAR

      &trans
      // ROW 2
      &trans
      &kp GRAVE       &kp SQT          &kp MINUS        &kp EQUAL      &kp BSLH
      &kp LEFT        &kp DOWN         &kp UP           &kp RIGHT      &ext_power EP_OFF
      &trans
      // ROW 3
      &trans
      &kp TILDE       &kp DQT          &kp UNDER        &kp PLUS       &kp PIPE
      &kp HOME        &kp PG_DN        &kp PG_UP        &kp END        &trans
      &trans
      // THUMBS
      &trans          &trans           &trans
                                                        &trans         &trans          &trans
    >;
  };

  layer2 {
    bindings = <
      // ROW 1
      &trans
      &kp C_PREV      &kp C_VOL_UP     &trans           &trans         &trans
      &kp EQUAL       &kp N7           &kp N8           &kp N9         &kp PLUS
      &trans
      // ROW 2
      &trans
      &kp C_PP        &trans           &trans           &trans         &trans
      &kp DOT         &kp N4           &kp N5           &kp N6         &kp UNDER
      &trans
      // ROW 3
      &trans
      &kp C_NEXT      &kp C_VOL_DN     &trans           &trans         &trans
      &kp N0          &kp N1           &kp N2           &kp N3         &kp MINUS
      &trans
      // THUMBS
      &trans          &trans           &trans
                                                        &trans         &trans          &trans
    >;
  };

  layer3 {
    bindings = <
      // ROW 1
      &trans
      &kp F1          &kp F2           &kp F3           &kp F4         &kp F5
      &trans          &trans           &trans           &trans         &bt BT_CLR
      &trans
      // ROW 2
      &trans
      &kp F6          &kp F7           &kp F8           &kp F9         &kp F10
      &trans          &trans           &trans           &trans         &ext_power EP_OFF
      &trans
      // ROW 3
      &trans
      &kp F11         &kp F12          &kp F13          &kp F14        &kp F15
      &bt BT_SEL 0    &bt BT_SEL 1     &bt BT_SEL 2     &bt BT_SEL 3   &bt BT_SEL 4
      &trans
      // THUMBS
      &trans          &trans           &trans
                                                        &trans         &trans          &trans
    >;
  };
};
};
