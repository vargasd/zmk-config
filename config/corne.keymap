/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

/ {
combos {
  compatible = "zmk,combos";
  lbrack {
    key-positions = <7 8>;
    bindings = <&kp LBKT>;
  };
  rbrack {
    key-positions = <8 9>;
    bindings = <&kp RBKT>;
  };
  lparen {
    key-positions = <19 20>;
    bindings = <&kp LPAR>;
  };
  rparen {
    key-positions = <20 21>;
    bindings = <&kp RPAR>;
  };
  lbrace {
    key-positions = <31 32>;
    bindings = <&kp LBRC>;
  };
  rbrace {
    key-positions = <32 33>;
    bindings = <&kp RBRC>;
  };
  ret {
    key-positions = <21 22>;
    bindings = <&kp RET>;
  };
  lalt {
    key-positions = <36 37>;
    bindings = <&kp LALT>;
  };
};

behaviors {
  td_cap_word: tap_dance_mod_tap {
    compatible = "zmk,behavior-tap-dance";
    label = "td_cap_word";
    #binding-cells = <0>;
    bindings = <&kp LSHFT>, <&caps_word>;
  };
};

keymap {
  compatible = "zmk,keymap";

  default_layer {
    bindings = <
      // ROW 1
      &kp TAB       &kp Q       &kp W     &kp E       &kp R         &kp T
      &kp Y         &kp U       &kp I     &kp O       &kp P         &kp BSPC
      // ROW 2
      &kp ESC       &kp A       &kp S     &kp D       &kp F         &kp G
      &kp H         &kp J       &kp K     &kp L       &kp SEMI      &kp SQT
      // ROW 3
      &td_cap_word  &kp Z       &kp X     &kp C       &kp V         &kp B
      &kp N         &kp M       &kp COMMA &kp DOT     &kp FSLH      &kp RALT
      // THUMBS
      &kp LCTRL     &lt 1 RET   &kp LGUI
      &mt RCTRL SPC &lt 2 SPC   &td_cap_word
    >;
  };

  lower_layer {
    bindings = <
      // ROW 1
      &trans        &kp GRAVE   &kp TILDE &kp DLLR    &kp BSLH      &kp PIPE
      &kp PLUS      &kp N7      &kp N8    &kp N9      &kp MINUS     &kp DEL
      // ROW 2
      &trans        &kp CARET   &kp EXCL  &kp HASH    &kp STAR      &kp AMPS
      &kp EQUAL     &kp N4      &kp N5    &kp N6      &kp COLON     &kp GRAVE
      // ROW 3
      &trans        &kp AT      &kp HASH  &kp STAR    &trans        &trans
      &kp N0        &kp N1      &kp N2    &kp N3      &kp UNDER     &trans
      // THUMBS
      &trans        &trans      &trans
      &trans        &trans      &trans
    >;
  };

  raise_layer {
    bindings = <
      // ROW 1
      &trans        &kp F1      &kp F2    &kp F3      &kp F4        &kp F5
      &kp HOME      &kp PG_DN   &kp PG_UP &kp END     &trans        &trans
      // ROW 2
      &trans        &kp F6      &kp F7    &kp F8      &kp F9        &kp F10
      &kp LEFT      &kp DOWN    &kp UP    &kp RIGHT   &trans        &trans
      // ROW 3
      &trans        &kp F11     &kp F12   &kp K_MUTE  &kp K_VOL_DN  &kp K_VOL_DN
      &trans        &kp C_PREV  &kp C_PP  &kp C_PP    &kp C_NEXT    &trans
      // THUMBS
      &trans        &trans      &trans
      &trans        &trans      &trans
    >;
  };
};
};
