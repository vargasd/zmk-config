/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

/ {
combos {
  compatible = "zmk,combos";
  lbrack {
    key-positions = <7 8>;
    bindings = <&kp LBKT>;
  };
  rbrack {
    key-positions = <8 9>;
    bindings = <&kp RBKT>;
  };
  jk {
    key-positions = <19 20>;
    bindings = <&mt RGUI LPAR>;
  };
  kl {
    key-positions = <20 21>;
    bindings = <&mt RALT RPAR>;
  };
  jkl {
    key-positions = <19 20 21>;
    bindings = <&kp RG(RALT)>;
  };
  lbrace {
    key-positions = <31 32>;
    bindings = <&kp LBRC>;
  };
  rbrace {
    key-positions = <32 33>;
    bindings = <&kp RBRC>;
  };
  ret {
    key-positions = <21 22>;
    bindings = <&kp RET>;
  };
  df {
    key-positions = <15 16>;
    bindings = <&kp LGUI>;
  };
  sd {
    key-positions = <14 15>;
    bindings = <&kp LALT>;
  };
  sdf {
    key-positions = <14 15 16>;
    bindings = <&kp RG(RALT)>;
  };
  inner_right_thumb {
    key-positions = <39 40>;
    bindings = <&mt RC(RSHFT) RC(SPC)>;
  };
};

behaviors {
  td_cap_word: tap_dance_mod_tap {
    compatible = "zmk,behavior-tap-dance";
    label = "td_cap_word";
    #binding-cells = <0>;
    bindings = <&kp LSHFT>, <&caps_word>;
  };
};

keymap {
  compatible = "zmk,keymap";

  default_layer {
    bindings = <
      // ROW 1
      &kp TAB       &kp Q            &kp W            &kp E            &kp R             &kp T
      &kp Y         &kp U            &kp I            &kp O            &kp P             &kp BSPC
      // ROW 2
      &kp ESC       &kp A            &kp S            &kp D            &kp F             &kp G
      &kp H         &kp J            &kp K            &kp L            &kp SEMI          &kp SQT
      // ROW 3
      &td_cap_word  &kp Z            &kp X            &kp C            &kp V             &kp B
      &kp N         &kp M            &kp COMMA        &kp DOT          &kp FSLH          &kp BSLH
      // THUMBS
      &mt LCTRL DEL &lt 1 ESC        &mt LSHFT TAB
                                                      &mt RCTRL RET    &lt 1 SPC         &lt 2 BSPC
    >;
  };

  lower_layer {
    bindings = <
      // ROW 1
      &trans        &kp GRAVE        &trans           &trans           &trans            &trans
      &trans        &kp LBKT         &kp RBKT         &kp MINUS        &kp EQUAL         &trans
      // ROW 2
      &trans        &kp N1           &kp N2           &kp N3           &kp N4            &kp N5
      &kp N6        &kp N7           &kp N8           &kp N9           &kp N0            &kp GRAVE
      // ROW 3
      &trans        &trans           &trans           &trans           &trans            &trans
      &trans        &trans           &trans           &trans           &trans            &trans
      // THUMBS
      &trans        &mt LSHFT ESC    &trans
                                                      &trans           &mt RSHFT SPC     &trans
    >;
  };

  raise_layer {
    bindings = <
      // ROW 1
      &kp C_BRI_UP  &kp F1           &kp F2           &kp F3           &kp F4            &kp F5
      &kp HOME      &kp PG_DN        &kp PG_UP        &kp END          &trans            &bt BT_SEL 0
      // ROW 2
      &bt BT_CLR    &kp F6           &kp F7           &kp F8           &kp F9            &kp F10
      &kp LEFT      &kp DOWN         &kp UP           &kp RIGHT        &trans            &bt BT_SEL 1
      // ROW 3
      &kp C_BRI_DN  &kp F11          &kp F12          &kp K_MUTE       &kp K_VOL_DN      &kp K_VOL_UP
      &trans        &kp C_PREV       &kp C_PP         &kp C_PP         &kp C_NEXT        &bt BT_SEL 2
      // THUMBS
      &trans        &mt LCTRL ESC    &trans
                                                      &trans           &trans            &trans
    >;
  };
};
};
